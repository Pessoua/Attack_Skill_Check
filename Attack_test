#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>

int min_number;
int max_number;
int seconds;

void tutorial();
int playGame(int Rand[], int points);
void clearConsole(); // Function to clear the console
void showTable(int Rand[]);

int main() {
    char R11;
    int Rand[9]; // Array to store the random numbers
    int points = 0; // Variable to keep track of points

    srand(time(NULL)); // Seed the random number generator

    tutorial(); // Display tutorial and difficulty selection once at the beginning

    do {
        printf("\n"); // Add newline for separation

        printf("Difficulty? [0 to 4] -> ");
        scanf("%d", &seconds);

        if (seconds >= 1 && seconds <= 4) {
            max_number = seconds == 1 ? 100 : (seconds == 2 ? 1000 : (seconds == 3 ? 10000 : 100000));
            min_number = seconds <= 2 ? 10 : (seconds <= 3 ? 100 : 10000);
            seconds = seconds == 4 ? 3 : (seconds == 3 ? 5 : (seconds == 2 ? 7 : 10));

            for (int i = 0; i < 9; i++) {
                Rand[i] = rand() % (max_number - min_number + 1) + min_number;
            }

            clearConsole(); // Clear the console before playing

            points = playGame(Rand, points); // Pass the array of random numbers and the current points
        } else if (seconds == 0) {
            break;
        } else {
            printf("Invalid input. Please enter a valid difficulty (0 to 4).\n");
        }

        printf("Points: %d\n", points); // Display points after each round

        printf("\nPlay again? [Y] [N]\n");
        scanf(" %c", &R11);

    } while (R11 == 'Y' || R11 == 'y');

    return 0;
}

void tutorial() {
    printf("Here's what you should select when playing the game:\n");
    printf("[1] / [2] / [3]\n");
    printf("[4] / [5] / [6]\n");
    printf("[7] / [8] / [9]\n");
    printf("If the highest number appears twice, enter 0\n");
    sleep(2);
}

int playGame(int Rand[], int points) {
    int timer = seconds;
    int userAnswer; // Variable to store the user's answer

    while (timer >= 0) {
        int h = timer / 3600;
        int m = (timer % 3600) / 60;
        int s = timer % 60;

        // Clear the console
        clearConsole();

        // Display timer
        printf("Time Remaining: %02d:%02d:%02d\n", h, m, s);

        // Show the table for the entire duration
        showTable(Rand);

        sleep(1);
        timer--;
    }

    // Clear the console before asking the question
    clearConsole();

    // Ask the user for the highest number
    printf("Time's up!\n");
    printf("What was the highest number?\n");
    scanf("%d", &userAnswer);

    // Find the highest number and count its occurrences
    int highest = Rand[0];
    int highestCount = 1;

    for (int i = 1; i < 9; i++) {
        if (Rand[i] > highest) {
            highest = Rand[i];
            highestCount = 1;
        } else if (Rand[i] == highest) {
            highestCount++;
        }
    }

    if (userAnswer == highest && highestCount == 1) {
        printf("Correct!\n");
        points++;
    } else if (userAnswer == 0) {
        printf("0 Selected, restarting game...\n");
    } else {
        printf("Incorrect. The correct answer was %d.\n", highest);
    }

    sleep(2);

    return points; // Return the updated points
}

void showTable(int Rand[]) {
    for (int i = 0; i < 9; i++) {
        printf("[%d] ", Rand[i]);

        // Print newline after every third number
        if ((i + 1) % 3 == 0) {
            printf("\n");
        }
    }
}

void clearConsole() {
    // Use the clear command to clear the console
    system("clear");
}
